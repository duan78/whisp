# Script de configuration de l'environnement de d√©veloppement pour Whisp Assistant (Windows)
# Usage: .\scripts\setup_dev.ps1

Write-Host "üöÄ Configuration de l'environnement de d√©veloppement Whisp Assistant..." -ForegroundColor Green

# V√©rifier Python
try {
    $pythonVersion = python -c "import sys; print('.'.join(map(str, sys.version_info[:2])))"
    Write-Host "‚úÖ Python $pythonVersion d√©tect√©" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Python est requis mais n'est pas install√©." -ForegroundColor Red
    exit 1
}

# Cr√©er l'environnement virtuel
if (-not (Test-Path "venv")) {
    Write-Host "üì¶ Cr√©ation de l'environnement virtuel..." -ForegroundColor Yellow
    python -m venv venv
}

# Activer l'environnement virtuel
Write-Host "üîß Activation de l'environnement virtuel..." -ForegroundColor Yellow
& venv\Scripts\Activate.ps1

# Mettre √† jour pip
Write-Host "‚¨ÜÔ∏è  Mise √† jour de pip..." -ForegroundColor Yellow
python -m pip install --upgrade pip setuptools wheel

# Installer les d√©pendances
Write-Host "üìö Installation des d√©pendances..." -ForegroundColor Yellow
pip install -r requirements.txt
pip install -r requirements-dev.txt

# Installer pre-commit hooks
Write-Host "üîó Configuration des hooks pre-commit..." -ForegroundColor Yellow
pre-commit install

# Cr√©er les fichiers de configuration si n√©cessaire
if (-not (Test-Path "config.env")) {
    Write-Host "üìù Cr√©ation du fichier de configuration..." -ForegroundColor Yellow
    Copy-Item config.example.env config.env
    Write-Host "‚úÖ Fichier config.env cr√©√©. √âditez-le selon vos besoins." -ForegroundColor Green
}

if (-not (Test-Path "api_keys.json")) {
    Write-Host "üîë Cr√©ation du fichier de cl√©s API..." -ForegroundColor Yellow
    Copy-Item api_keys.json.example api_keys.json
    Write-Host "‚úÖ Fichier api_keys.json cr√©√©. Ajoutez vos cl√©s API." -ForegroundColor Green
}

# Cr√©er les dossiers n√©cessaires
Write-Host "üìÅ Cr√©ation des dossiers de donn√©es..." -ForegroundColor Yellow
New-Item -ItemType Directory -Force -Path logs
New-Item -ItemType Directory -Force -Path records
New-Item -ItemType Directory -Force -Path backups
New-Item -ItemType Directory -Force -Path cache

# V√©rifier l'installation
Write-Host "üß™ V√©rification de l'installation..." -ForegroundColor Yellow
try {
    python -c "
import sys
try:
    import speech_recognition_module
    print('‚úÖ Module STT OK')
except ImportError as e:
    print(f'‚ùå Erreur STT: {e}')

try:
    import tts_module
    print('‚úÖ Module TTS OK')
except ImportError as e:
    print(f'‚ùå Erreur TTS: {e}')

try:
    import web_interface
    print('‚úÖ Interface web OK')
except ImportError as e:
    print(f'‚ùå Erreur interface web: {e}')
"
} catch {
    Write-Host "‚ö†Ô∏è  Erreur lors de la v√©rification des modules." -ForegroundColor Yellow
}

# Tests rapides
Write-Host "üß™ Ex√©cution des tests rapides..." -ForegroundColor Yellow
if (Get-Command pytest -ErrorAction SilentlyContinue) {
    try {
        pytest tests\ -v --tb=short -x
    } catch {
        Write-Host "‚ö†Ô∏è  Certains tests ont √©chou√©. V√©rifiez la configuration." -ForegroundColor Yellow
    }
} else {
    Write-Host "‚ö†Ô∏è  pytest non trouv√©, saut des tests." -ForegroundColor Yellow
}

Write-Host "" -ForegroundColor White
Write-Host "üéâ Configuration termin√©e !" -ForegroundColor Green
Write-Host "" -ForegroundColor White
Write-Host "Prochaines √©tapes :" -ForegroundColor Cyan
Write-Host "1. Activez l'environnement: venv\Scripts\Activate.ps1" -ForegroundColor White
Write-Host "2. Configurez vos cl√©s API dans api_keys.json" -ForegroundColor White
Write-Host "3. Adaptez config.env selon vos pr√©f√©rences" -ForegroundColor White
Write-Host "4. Lancez l'assistant: python main.py" -ForegroundColor White
Write-Host "" -ForegroundColor White
Write-Host "Documentation: https://docs.whisp-assistant.com" -ForegroundColor Cyan
Write-Host "Support: https://github.com/votre-username/whisp-assistant/issues" -ForegroundColor Cyan